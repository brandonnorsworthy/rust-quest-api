name: Build, Test, and Deploy

on:
  push:
    branches:
      - main
  pull_request:
    branches:
      - main

jobs:
  main-deploy:
    runs-on: ubuntu-latest
    environment: dev

    steps:
      - name: Checkout code
        uses: actions/checkout@v3

      - name: Set up Node.js
        uses: actions/setup-node@v3

      - name: Install dependencies
        run: npm install

      - name: Check environment variables
        run: |
          echo "MY_SECRET_VARIABLE=${MY_SECRET_VARIABLE}"

      - name: Build the project
        run: npm run build

      # - name: Run tests
      #   env:
      #     NODE_ENV: ${{ github.env }}
      #     POSTGRES_USER: ${{ secrets.POSTGRES_USER }}
      #     POSTGRES_HOST: ${{ secrets.POSTGRES_HOST }}
      #     POSTGRES_DATABASE: ${{ secrets.POSTGRES_DATABASE }}
      #     POSTGRES_PASSWORD: ${{ secrets.POSTGRES_PASSWORD }}
      #     POSTGRES_PORT: ${{ secrets.POSTGRES_PORT }}
      #     POSTGRES_SSL: ${{ secrets.POSTGRES_SSL }}

      #     JWT_SECRET: ${{ secrets.JWT_SECRET }}

      #     BCRYPT_PEPPER: ${{ secrets.BCRYPT_PEPPER }}
      #     BCRYPT_SALT_ROUNDS: ${{ secrets.BCRYPT_SALT_ROUNDS }}
      #   run: npm test

      - name: Deploy to EC2
        env:
          SSH_PRIVATE_KEY: ${{ secrets.SSH_PRIVATE_KEY }}
          EC2_USER: ${{ secrets.EC2_USER }}
          EC2_IP: ${{ secrets.EC2_IP }}
        run: |
          echo "${{ secrets.SSH_PRIVATE_KEY }}" > ~/ssh_key
          chmod 600 ~/ssh_key
          scp -i ~/ssh_key -o StrictHostKeyChecking=no -r ./dist/* ${{ secrets.EC2_USER }}@${{ secrets.EC2_IP }}:/home/ec2-user/app/
          ssh -i ~/ssh_key -o StrictHostKeyChecking=no ${{ secrets.EC2_USER }}@${{ secrets.EC2_IP }} << 'EOF'
            cd /home/ec2-user/app/
            npm install --production
            pm2 restart all || pm2 start dist/server.js --name "my-app"
          EOF
